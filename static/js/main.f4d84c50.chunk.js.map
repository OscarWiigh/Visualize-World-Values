{"version":3,"sources":["components/Map/index.js","components/Chart/index.js","components/CountryInfo/index.js","App.js","serviceWorker.js","index.js"],"names":["wrapperStyles","width","maxWidth","marginLeft","marginTop","display","background","boxShadow","borderRadius","Map","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","onSelectCountry","geography","evt","selectedCountryData","geodata","props","countryData","properties","name","Country","onCountrySelect","state","zoom","handleZoomIn","bind","assertThisInitialized","handleZoomOut","setState","setTimeout","ReactTooltip","rebuild","countryName","popScale","allCountries","detail","countryDetail","country","_this2","scaleLinear","domain","percentage","range","react_default","a","createElement","id","className","onClick","style","lib","projectionConfig","scale","rotation","height","center","disableOptimization","geographies","projection","map","i","key","concat","iso_a3","cacheId","data-tip","round","default","fill","countryColor","stroke","strokeWidth","outline","hover","pressed","dist_default","Math","Component","Chart","drawChart","propsdata","updateChart","variable","min","max","this2","parseDate","d3","x","y","xAxis","yAxis","valueline","d","date","close","url","process","gapVar","then","res","data","happ","forEach","row","selectedCountry","keys","url1","area","url2","url3","url4","res1","row1","res2","row2","res3","row3","res4","row4","Date","svg","div","selectAll","attr","scaleRadius","on","transition","duration","html","getFullYear","replace","l","toUpperCase","pageX","pageY","select","text","margin","append","enter","React","CountryInfo","objtoelements","obj","elarray","_arr","_i","length","push","pop","countrydata","wave","substr","areaoptions","value","label","waveoptions","gapoptions","App","detaillist","detailtest","columns","Very happy","Rather happy","Not very happy","Not at all happy","maxPercentage","update","handleDataSelection","handleWaveSelection","e","handleGapSelection","handleDetailSelection","handleAreaSelection","loadData","slice","newRow","o","parseInt","detaillista","detailsobj","keynum","react_select_esm","defaultValue","onChange","options","components_Map","components_Chart","components_CountryInfo","Boolean","window","location","hostname","match","ReactDOM","render","src_App_0","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.f4d84c50.chunk.js","sourcesContent":["import React, { Component } from \"react\"\nimport {\n  ComposableMap,\n  ZoomableGroup,\n  Geographies,\n  Geography,\n} from \"react-simple-maps\"\nimport { scaleLinear } from \"d3-scale\"\nimport ReactTooltip from \"react-tooltip\"\nimport \"./map.css\"\n\nconst wrapperStyles = {\n  width: \"100%\",\n  maxWidth: 980,\n  marginLeft: \"50px\",\n  marginTop: \"30px\",\n  display: \"inline-block\",\n  background: \"white\",\n  boxShadow: \"0 6px 15px rgba(36,37,38,0.08)\",\n  borderRadius: \"16px\"\n}\n\nclass Map extends Component {\n  constructor() {\n    super()\n\n    this.state = {\n      zoom: 1,\n    }\n\n    this.handleZoomIn = this.handleZoomIn.bind(this)\n    this.handleZoomOut = this.handleZoomOut.bind(this)\n  }\n  handleZoomIn() {\n   if (this.state.zoom != 3.814697265625) {\n    this.setState({\n      zoom: this.state.zoom * 1.25\n    })\n   }\n   else {\n    this.setState({\n      zoom: 3.814697265625\n    })\n   }\n  }\n  handleZoomOut() {\n    if (this.state.zoom != 1) {\n      this.setState({\n        zoom: this.state.zoom / 1.25\n      })\n     }\n     else {\n      this.setState({\n        zoom: 1\n      })\n     }\n  }\n\n  componentDidMount() {\n    setTimeout(() => {\n      ReactTooltip.rebuild()\n    }, 300)\n  }\n\n\n  onSelectCountry = (geography, evt) => {\n    var geodata = this.props.countryData;\n    let selectedCountryData;\n    if (geodata[geography.properties.name]) {\n      selectedCountryData = (geodata[geography.properties.name])\n      selectedCountryData.Country = geography.properties.name;\n    }\n    else {\n      selectedCountryData = {}\n      selectedCountryData.Country = geography.properties.name;\n    }\n    this.props.onCountrySelect(selectedCountryData)\n  }\n\n  countryColor (countryName, popScale) {\n    let allCountries = this.props.countryData;\n    let detail = this.props.countryDetail;\n    let country = allCountries[countryName];\n    if (country) {\n      return popScale(country[detail])}\n    else {return \"#bcbcbc\"}\n  }\n\n  render() {\n    var popScale = scaleLinear()\n        .domain([0, this.props.percentage/2, this.props.percentage])\n        .range([\"#ff0000\", \"#ffff00\", \"#00ff00\"])\n    return (\n      <div id=\"container\">\n      <div id=\"buttoncontainer\">\n            <div className=\"zoombuttons\" onClick={ this.handleZoomIn }><p className=\"buttontext\">+</p></div>\n            <div className=\"zoombuttons\" onClick={ this.handleZoomOut }><p className=\"buttontext\">-</p></div>\n          </div>\n        <div style={wrapperStyles}>\n          <ComposableMap\n            projectionConfig={{\n              scale: 205,\n              rotation: [-11,0,0],\n            }}\n            width={980}\n            height={551}\n            style={{\n              width: \"100%\",\n              height: \"auto\",\n            }}\n            >\n            <ZoomableGroup zoom={this.state.zoom} center={[0,20]}>\n              <Geographies\n                geography={ \"/world-50m-with-population.json\" }\n                disableOptimization\n                >\n                {(geographies, projection) =>\n                  geographies.map((geography, i) => (\n                    <Geography\n                      key={`${geography.properties.iso_a3}-${i}`}\n                      cacheId={`${geography.properties.iso_a3}-${i}`}\n                      data-tip={geography.properties.name}\n                      geography={ geography }\n                      projection={ projection }\n                      onClick={ this.onSelectCountry }\n                      round\n                      style={{\n                        default: {\n                          fill: this.countryColor(geography.properties.name, popScale),\n                          stroke: \"#607D8B\",\n                          strokeWidth: 0.75,\n                          outline: \"none\",\n                        },\n                        hover: {\n                          fill: this.countryColor(geography.properties.name, popScale),\n                          stroke: \"#607D8B\",\n                          strokeWidth: 0.75,\n                          outline: \"none\",\n                        },\n                        pressed: {\n                          fill: \"blue\",\n                          stroke: \"#607D8B\",\n                          strokeWidth: 0.75,\n                          outline: \"none\",\n                        }\n                      }}\n                    />\n                ))}\n              </Geographies>\n            </ZoomableGroup>\n          </ComposableMap>\n          <ReactTooltip />\n          <div id=\"legend\">\n              <span className=\"tooltiptext\">A legend describing the color mapping of the chart</span>\n              <p id=\"all\">{this.props.percentage + \"%\"}</p>\n              <p id=\"half\">{Math.round(this.props.percentage/2)+ \"%\"}</p>\n              <p id=\"zero\">0%</p>\n          </div>\n        </div>\n      </div>\n    )\n  }\n}\n\nexport default Map","import React from \"react\"\nimport \"./chart.css\";\nimport * as d3 from 'd3';\n\n\nclass Chart extends React.Component {\n\n  constructor(props) {\n    super(props);\n    this.drawChart = this.drawChart.bind(this)\n\n  }\n\n  componentDidMount() {\n    const propsdata = this.props\n    this.drawChart(propsdata)\n  }\n  componentWillReceiveProps(propsdata) {\n    if (propsdata !== this.props) {\n      this.updateChart(propsdata)\n    }\n  }\n\n  scaleRadius(variable, min, max) {\n    if (variable + max + min > 0) {\n      const radius = (((40-10)*(variable-min))/(max-min)) + 10\n      return radius\n    }\n    else {\n      const radius=0\n      return radius\n    }\n\n  }\n\n\n  updateChart(propsdata) {\n    let this2 = this;\n    var margin = { top: 30, right: 20, bottom: 30, left: 50 },\n      width = 980 - margin.left - margin.right,\n      height = 658 - margin.top - margin.bottom;\n    // Parse the date / time\n    var parseDate = d3.timeParse(\"%Y\");\n\n    // Set the ranges\n    var x = d3.scaleTime().range([0, width]);\n    var y = d3.scaleLinear().range([height, 0]).domain([0.5, 1]);\n\n    // Define the axes\n    var xAxis = d3.axisBottom(x);\n\n    var yAxis = d3.axisLeft(y);\n\n    // Define the line\n    var valueline = d3.line()\n      .x(function (d) { return x(d.date); })\n      .y(function (d) { return y(d.close); });\n\n    // Get the data again\n    let url = process.env.PUBLIC_URL + \"./data/\" + propsdata.gapVar + '.csv'\n    d3.csv(url).then(res => {\n      var data = [\n        {\n          \"date\": \"1995\",\n          \"close\": 0,\n          \"happ\": 0\n        },\n        {\n          \"date\": \"2004\",\n          \"close\": 0,\n          \"happ\": 0\n        },\n        {\n          \"date\": \"2009\",\n          \"close\": 0,\n          \"happ\": 0\n        },\n        {\n          \"date\": \"2014\",\n          \"close\": 0,\n          \"happ\": 0\n        }\n      ]\n      res.forEach((row) => {\n        if (row.Country == propsdata.selectedCountry) {\n          data[0][\"close\"] = row[Object.keys(row)[0]];\n          data[1][\"close\"] = row[Object.keys(row)[1]];\n          data[2][\"close\"] = row[Object.keys(row)[2]];\n          data[3][\"close\"] = row[Object.keys(row)[3]];\n\n        }\n      })\n      let url1 = process.env.PUBLIC_URL + \"./data/\" + propsdata.area + \"Wave3\" + '.csv'\n      let url2 = process.env.PUBLIC_URL + \"./data/\" + propsdata.area + \"Wave4\" + '.csv'\n      let url3 = process.env.PUBLIC_URL + \"./data/\" + propsdata.area + \"Wave5\" + '.csv'\n      let url4 = process.env.PUBLIC_URL + \"./data/\" + propsdata.area + \"Wave6\" + '.csv'\n      d3.csv(url1).then(res1 => {\n        res1.forEach((row1) => {\n          if (row1.Country == propsdata.selectedCountry) {\n            data[0][\"happ\"] = row1[propsdata.detail]\n          }\n        })\n        d3.csv(url2).then(res2 => {\n          res2.forEach((row2) => {\n            if (row2.Country == propsdata.selectedCountry) {\n              data[1][\"happ\"] = row2[propsdata.detail]\n            }\n          })\n        })\n        d3.csv(url3).then(res3 => {\n          res3.forEach((row3) => {\n            if (row3.Country == propsdata.selectedCountry) {\n              data[2][\"happ\"] = row3[propsdata.detail]\n            }\n          })\n        })\n        d3.csv(url4).then(res4 => {\n          res4.forEach((row4) => {\n            if (row4.Country == propsdata.selectedCountry) {\n              data[3][\"happ\"] = row4[propsdata.detail]\n            }\n          })\n          data.forEach(function (d) {\n            d.date = parseDate(d.date);\n            d.close = +d.close;\n            d.happ = d.happ / 2;\n          });\n          // Scale the range of the data again \n          x.domain([new Date('1993-01-01'), new Date('2016-01-01')]);\n          y.domain([d3.min(data, function (d) { return d.close * 0.99; }), d3.max(data, function (d) { return d.close; })]);\n\n          // Select the section we want to apply our changes to\n          var svg = d3.select(\"#containerchart\");\n\n          var div = d3.select(\".tooltip\")\n\n          svg.selectAll(\"circle\")\n            .data(data)\n            .attr(\"r\", function (d) { return this2.scaleRadius(d.happ, d3.min(data, function (d) { return d.happ}), d3.max(data, function (d) { return d.happ})) })\n            .attr(\"cx\", function (d) { return x(d.date); })\n            .attr(\"cy\", function (d) { return y(d.close); })\n            .on(\"mouseover\", function (d) {\n              div.transition()\n                .duration(200)\n                .style(\"opacity\", .9);\n              div.html(propsdata.selectedCountry + \", \" + propsdata.area + \"<br/>\" + \"Year: \" + d.date.getFullYear() + \"<br/>\" + propsdata.gapVar.replace(/_/g, \" \").replace(/\\b\\w/g, function(l){ return l.toUpperCase() }) + \": \" + d.close + \"<br/>\" + propsdata.detail + \": \" + d.happ * 2 + \"%\")\n                .style(\"left\", (d3.event.pageX-85) + \"px\")\n                .style(\"top\", (d3.event.pageY + 10) + \"px\");\n            })\n            .on(\"mouseout\", function (d) {\n              div.transition()\n                .duration(500)\n                .style(\"opacity\", 0);\n            });\n\n          // Make the changes\n          svg.transition().select(\".line\")   // change the line\n            .duration(750)\n            .attr(\"d\", valueline(data));\n          svg.transition().select(\".x.axis\") // change the x axis\n            .duration(750)\n            .call(xAxis);\n          svg.transition().select(\".y.axis\") // change the y axis\n            .duration(750)\n            .call(yAxis);\n            svg.select(\"#ytext\") // change the y axis\n            .text(propsdata.gapVar.replace(/_/g, \" \").replace(/\\b\\w/g, function(l){ return l.toUpperCase() }));\n        })\n      })\n\n\n    });\n  }\n\n  drawChart(propsdata) {\n    let this2 = this;\n    var margin = { top: 30, right: 20, bottom: 30, left: 50 },\n      width = 980 - margin.left - margin.right,\n      height = 658 - margin.top - margin.bottom;\n\n    var div = d3.select(\"#containerchart\").append(\"div\")\n      .attr(\"class\", \"tooltip\")\n      .style(\"opacity\", 0);\n\n    // Parse the date / time\n    var parseDate = d3.timeParse(\"%Y\");\n\n    // Set the ranges\n    var x = d3.scaleTime().range([0, width]);\n    var y = d3.scaleLinear().range([height, 0]).domain([0.5, 1]);\n\n    // Define the axes\n    var xAxis = d3.axisBottom(x);\n\n    var yAxis = d3.axisLeft(y);\n\n    // Define the line\n    var valueline = d3.line()\n      .x(function (d) { return x(d.date); })\n      .y(function (d) { return y(d.close); });\n\n    var svg = d3.select(\"#containerchart\")\n      .append(\"svg\")\n      .attr(\"id\", \"chartid\")\n      .attr(\"preserveAspectRatio\", \"xMidYMid\")\n      .attr(\"viewBox\", \"0 0 980 658\")\n      .attr(\"width\", width + margin.left + margin.right)\n      .attr(\"height\", height + margin.top + margin.bottom)\n      .append(\"g\")\n      .attr(\"transform\",\n        \"translate(\" + margin.left + \",\" + margin.top + \")\");\n\n    let url = process.env.PUBLIC_URL + \"./data/\" + propsdata.gapVar + '.csv'\n    d3.csv(url).then(res => {\n      var data = [\n        {\n          \"date\": \"1995\",\n          \"close\": 0,\n          \"happ\": 0\n        },\n        {\n          \"date\": \"2004\",\n          \"close\": 0,\n          \"happ\": 0\n        },\n        {\n          \"date\": \"2009\",\n          \"close\": 0,\n          \"happ\": 0\n        },\n        {\n          \"date\": \"2014\",\n          \"close\": 0,\n          \"happ\": 0\n        }\n      ]\n      res.forEach((row) => {\n        if (row.Country == propsdata.selectedCountry) {\n          data[0][\"close\"] = row[Object.keys(row)[0]];\n          data[1][\"close\"] = row[Object.keys(row)[1]];\n          data[2][\"close\"] = row[Object.keys(row)[2]];\n          data[3][\"close\"] = row[Object.keys(row)[3]];\n\n        }\n      })\n      let url1 = process.env.PUBLIC_URL + \"./data/\" + propsdata.area + \"Wave3\" + '.csv'\n      let url2 = process.env.PUBLIC_URL + \"./data/\" + propsdata.area + \"Wave4\" + '.csv'\n      let url3 = process.env.PUBLIC_URL + \"./data/\" + propsdata.area + \"Wave5\" + '.csv'\n      let url4 = process.env.PUBLIC_URL + \"./data/\" + propsdata.area + \"Wave6\" + '.csv'\n      d3.csv(url1).then(res1 => {\n        res1.forEach((row1) => {\n          if (row1.Country == propsdata.selectedCountry) {\n            data[0][\"happ\"] = row1[propsdata.detail]\n          }\n        })\n        d3.csv(url2).then(res2 => {\n          res2.forEach((row2) => {\n            if (row2.Country == propsdata.selectedCountry) {\n              data[1][\"happ\"] = row2[propsdata.detail]\n            }\n          })\n        })\n        d3.csv(url3).then(res3 => {\n          res3.forEach((row3) => {\n            if (row3.Country == propsdata.selectedCountry) {\n              data[2][\"happ\"] = row3[propsdata.detail]\n            }\n          })\n        })\n        d3.csv(url4).then(res4 => {\n          res4.forEach((row4) => {\n            if (row4.Country == propsdata.selectedCountry) {\n              data[3][\"happ\"] = row4[propsdata.detail]\n            }\n          })\n          data.forEach(function (d) {\n            d.date = parseDate(d.date);\n            d.close = +d.close;\n            d.happ = d.happ / 2;\n          });\n\n          // Scale the range of the data\n          x.domain([new Date('1993-01-01'), new Date('2016-01-01')]);\n          y.domain([d3.min(data, function (d) { return d.close * 0.99; }), d3.max(data, function (d) { return d.close; })]);\n\n          // Add the valueline path.\n          svg.append(\"path\")\n            .attr(\"class\", \"line\")\n            .attr(\"d\", valueline(data));\n\n          svg.selectAll(\"circle\")\n            .data(data)\n            .enter().append(\"circle\")\n            .attr(\"r\", function (d) { return this2.scaleRadius(d.happ, d3.min(data, function (d) { return d.happ}), d3.max(data, function (d) { return d.happ})) })\n            .attr(\"cx\", function (d) { return x(d.date); })\n            .attr(\"cy\", function (d) { return y(d.close); })\n            .on(\"mouseover\", function (d) {\n              div.transition()\n                .duration(200)\n                .style(\"opacity\", .9);\n              div.html(propsdata.selectedCountry + \", \" + propsdata.area + \"<br/>\" + \"Year: \" + d.date.getFullYear() + \"<br/>\" + propsdata.gapVar.replace(/_/g, \" \").replace(/\\b\\w/g, function(l){ return l.toUpperCase() }) + \": \" + d.close + \"<br/>\" + propsdata.detail + \": \" + d.happ * 2 + \"%\")\n                .style(\"left\", (d3.event.pageX-85) + \"px\")\n                .style(\"top\", (d3.event.pageY + 10) + \"px\");\n            })\n\n            .on(\"mouseout\", function (d) {\n              div.transition()\n                .duration(500)\n                .style(\"opacity\", 0);\n            });\n\n          // Add the X Axis\n          svg.append(\"g\")\n            .attr(\"class\", \"x axis\")\n            .attr(\"transform\", \"translate(0,\" + height + \")\")\n            .call(xAxis);\n\n          svg.append(\"text\")\n          .attr(\"class\", \"labels\")\n            .attr(\"transform\",\n              \"translate(\" + (width-5) + \" ,\" +\n              (height - 10) + \")\")\n            .style(\"text-anchor\", \"middle\")\n            .text(\"Year\");\n\n          // Add the Y Axis\n          svg.append(\"g\")\n            .attr(\"class\", \"y axis\")\n            .call(yAxis);\n\n          // text label for the y axis\n          svg.append(\"text\")\n          .attr(\"class\", \"labels\")\n          .attr(\"id\", \"ytext\")\n          .attr(\"transform\",\n              \"translate(\" + (5) + \" ,\" +\n              (5) + \")\")\n            .text(propsdata.gapVar.replace(/_/g, \" \").replace(/\\b\\w/g, function(l){ return l.toUpperCase() }));\n        })\n      })\n    })\n\n  }\n  render() {\n    return (\n      <div id=\"containerchart\">\n      </div>\n\n    );\n  }\n}\n\nexport default Chart;","import React, { Component } from \"react\"\nimport \"./countryinfo.css\"\n\nclass CountryInfo extends Component {\n  constructor() {\n    super()\n    this.objtoelements = this.objtoelements.bind(this)\n\n  }\n\n  objtoelements(obj) {\n    let elarray = []\n    for (const key of Object.keys(obj)) {\n      elarray.push(<p className=\"textcountry\" key={key}>{key + \": \" + obj[key] + \"%\"}</p>);\n    }\n    elarray.pop()\n    return elarray;\n  }\n\n  render() {\n    let countrydata = this.props.selectedCountry;\n\n    if (Object.keys(countrydata).length > 2) {\n      return (\n        <div id=\"countrycontainer\">\n          <h2 className=\"countryTitle\">{countrydata.Country}</h2>\n          {this.objtoelements(countrydata)}\n        </div>\n      )\n    }\n    else {\n      return <div id=\"countrycontainer\">\n        <h2 className=\"textcountry\">{countrydata.Country}</h2>\n        <p className=\"textcountry\">No data during {this.props.wave.substr(0,4) + \" \" + this.props.wave.substr(4,5) }!</p>\n      </div>\n    }\n  }\n}\n\nexport default CountryInfo","import React, { Component } from 'react';\nimport './App.css';\nimport Map from \"./components/Map\"\nimport Chart from \"./components/Chart\"\nimport * as d3 from 'd3'\nimport CountryInfo from './components/CountryInfo';\nimport Select from 'react-select'\n\nconst areaoptions = [\n  { value: 'Happiness', label: 'Happiness in Life' },\n  { value: 'WorkImportance', label: 'Work Importance in Life' },\n  { value: 'LeisureImportance', label: 'Leisure Importance in Life' },\n  { value: 'FamilyImportance', label: 'Family Importance in Life' },\n  { value: 'ReligionImportance', label: 'Religion Importance in Life' },\n  { value: 'SubjectiveHealth', label: 'Subjective state of health' },\n  { value: 'TrustInPeople', label: 'Trust in people' },\n  { value: 'MostImportant', label: 'What is most important (of given options)?' }\n]\n\nconst waveoptions = [\n  { value: 'Wave6', label: 'Wave 6 (2010-2014)' },\n  { value: 'Wave5', label: 'Wave 5 (2005-2009)' },\n  { value: 'Wave4', label: 'Wave 4 (1999-2004)' },\n  { value: 'Wave3', label: 'Wave 3 (1995-1998)' },\n]\n\nconst gapoptions = [\n  { value: 'child_mortality', label: 'Child Mortality per 1000 births' },\n  { value: 'life_expectancy_years', label: 'Life expectancy in years' },\n  { value: 'co2_emissions_tonnes_per_person', label: 'CO2 emissions tonnes/person' },\n  { value: 'income_per_person', label: 'Income/person (GDP/capita, PPP$, infl. adj.) ' },\n  { value: 'long_term_unemployment', label: 'Long term unemployment (% of pop.)' },\n  { value: 'children_per_woman', label: 'Number of children per woman' },\n  { value: 'hdi_human_development', label: 'Human Development Index' },\n  { value: 'population_growth_annual_percent', label: 'Annual population growth/year (%)' }\n]\n\nclass App extends Component {\n\n  constructor(props) {\n    super(props)\n\n  }\n  state = {\n    countryData: [],\n    wave: 'Wave6',\n    variable: 'Happiness',\n    detaillist: [{ value: \"Very happy\", label: \"Very happy\" },\n    { value: \"Rather happy\", label: \"Rather happy\" },\n    { value: \"Not very happy\", label: \"Not very happy\" },\n    { value: \"Not at all happy\", label: \"Not at all happy\" }, { value: \"Others\", label: \"Others\" }],\n    detail: 'Very happy',\n    gapVar: \"life_expectancy_years\",\n    detailtest : [{ value: \"Very happy\", label: \"Very happy\" }],\n    columns: [],\n    selectedCountry: {\n      \"Very happy\": 40,\n      \"Rather happy\": 54,\n      \"Not very happy\": 4,\n      \"Not at all happy\": 0,\n      \"Country\": \"Sweden\"\n    },\n    maxPercentage: 100,\n    update: false\n\n  };\n\n  componentDidMount() {\n    this.loadData()\n  }\n\n  handleDataSelection = (data) => {\n    this.setState({ selectedCountry: data });\n  }\n\n  handleWaveSelection = (e) => {\n    let wave = this.state.wave;\n    if (wave !== e.value) { this.setState({ wave: e.value, update: true, selectedCountry: {} }) }\n    setTimeout(() => {\n      this.setState({ update: false })\n    }, 100)\n  }\n\n  handleGapSelection = (e) => {\n    let gap = this.state.gapVar;\n    if (gap !== e.value) { this.setState({ gapVar: e.value, update: true }) }\n    setTimeout(() => {\n      this.setState({ update: false })\n    }, 100)\n  }\n\n  handleDetailSelection = (e) => {\n    let detail = this.state.detail;\n    if (detail !== e.value) { this.setState({ detail: e.value, detailtest: [{value: e.value, label:  e.value}], update: true, selectedCountry: {} }) }\n    setTimeout(() => {\n      this.setState({ update: false })\n    }, 100)\n  }\n\n  handleAreaSelection = (e) => {\n    let area = this.state.variable;\n    if (area !== e.value) { this.setState({ variable: e.value, update: true, selectedCountry: {} }) }\n    if (e.value == \"WorkImportance\") { this.setState({ detail: \"Very important\", detailtest: [{value: \"Very important\", label: \"Very important\"}] }) }\n    if (e.value == \"LeisureImportance\") { this.setState({ detail: \"Very important\", detailtest: [{value: \"Very important\", label: \"Very important\"}] }) }\n    if (e.value == \"FamilyImportance\") { this.setState({ detail: \"Rather important\", detailtest: [{value: \"Rather important\", label: \"Rather important\"}] }) }\n    if (e.value == \"ReligionImportance\") { this.setState({ detail: \"Very important\", detailtest: [{value: \"Very important\", label: \"Very important\"}] }) }\n    if (e.value == \"SubjectiveHealth\") { this.setState({ detail: \"Very good\", detailtest: [{value: \"Very good\", label: \"Very good\"}] }) }\n    if (e.value == \"Happiness\") { this.setState({ detail: \"Very happy\", detailtest: [{value: \"Very happy\", label: \"Very happy\"}] }) }\n    if (e.value == 'TrustInPeople') { this.setState({ detail: \"Most people can be trusted\", detailtest: [{value: \"Most people can be trusted\", label: \"Most people can be trusted\"}] }) }\n    if (e.value == 'MostImportant') { this.setState({ detail: \"A stable economy\", detailtest: [{value: \"A stable economy\", label: \"A stable economy\"}] }) }\n    setTimeout(() => {\n      this.setState({ update: false})\n    }, 100)\n  }\n\n  loadData = () => {\n    let max = 0;\n    let data = {}\n    let url = process.env.PUBLIC_URL + \"./data/\" + this.state.variable + this.state.wave + '.csv'\n    d3.csv(url).then(res => {\n      let columns = Object.keys(res[0]).slice(1);\n      this.setState({ columns: columns })\n      res.forEach((row) => {\n        let country = row.Country\n        delete row.Country\n        var newRow = {}\n\n        Object.keys(row).map((o) => {\n\n          newRow[o] = parseInt(row[o])\n        })\n        data[country] = newRow\n        if (data[country][this.state.detail] >= max) {\n          max = data[country][this.state.detail]\n        }\n      })\n      var detaillista = []\n      let detailsobj = data;\n      if (Object.keys(detailsobj).length > 0) {\n        for (var key in detailsobj) break;\n        Object.keys(detailsobj[key]).forEach(function (keynum) {\n          detaillista.push({ value: keynum, label: keynum });\n        });\n        this.setState({ detaillist: detaillista })\n      }\n      this.setState({ countryData: data, maxPercentage: max })\n    })\n\n  }\n  render() {\n    if (this.state.update) {\n      this.loadData()\n    }\n    return (\n      <div id=\"supercontainer\">\n        <div id=\"toprow\">\n          <h3 className=\"select name\">YOU CAN NOW EXPLORE</h3>\n          <div className=\"select\" id=\"areaContainer\">\n            <Select defaultValue={areaoptions[0]} onChange={this.handleAreaSelection} options={areaoptions} />\n          </div>\n          <h3 className=\"select name\">DURING THE FOLLOWING</h3>\n          <div className=\"select\" id=\"waveContainer\">\n            <Select defaultValue={waveoptions[0]} onChange={this.handleWaveSelection} options={waveoptions} />\n          </div>\n          <h3 className=\"select name\">WITH MAP ATTRIBUTE</h3>\n          <div className=\"select\" id=\"detailsContainer\">\n            <Select defaultValue={this.state.detaillist[0]} value={this.state.detailtest} onChange={this.handleDetailSelection} options={this.state.detaillist} />\n          </div>\n          <h3 className=\"select name\">AND COMPARE THAT WITH</h3>\n          <div className=\"select\" id=\"gapContainer\">\n            <Select defaultValue={gapoptions[1]} onChange={this.handleGapSelection} options={gapoptions} />\n          </div>\n          <h3 className=\"select name\">IN THE GRAPH BELOW</h3>\n        </div>\n        <Map countryDetail={this.state.detail} countryData={this.state.countryData} percentage={this.state.maxPercentage} onCountrySelect={this.handleDataSelection} />\n        <Chart selectedCountry={this.state.selectedCountry.Country} gapVar={this.state.gapVar} area={this.state.variable} detail={this.state.detail}/>\n        <CountryInfo selectedCountry={this.state.selectedCountry} wave={this.state.wave} />\n        <div id=\"chartinfo\">\n        <h2 className=\"chartinfoTitle\">{this.state.variable} ({this.state.detail}) vs. {this.state.gapVar.replace(/_/g, \" \").replace(/\\b\\w/g, function(l){ return l.toUpperCase() })}</h2>\n        <div id=\"questionmark\">?</div>\n        <span className=\"tooltiptextnew\">Bubble size represent percentages of a selected world value (such as 30% very happy) while the y-axis represents gapminder data (such as 83.2 life expectancy)</span>\n        <p className=\"chartinfotext\">Selected Country: {this.state.selectedCountry.Country}, 1995-2014</p>\n      </div>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}